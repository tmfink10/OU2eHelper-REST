@page "/"
@using InputType = BlazorStrap.InputType
@inherits IndexBase

<h1 style="margin-bottom: 20px">Outbreak Undead 2e: Character Creator</h1>

@if (_createNew == false)
{
    <p>
        Welcome to the character creator section. Character creation happens in three phases: <br />
        - First, you will choose your character's core traits such as Name, Age, and S.P.E.W. attributes.<br />
        - Second, you will choose your character's attributes.<br />
        - Third, you will update your character's skills.<br /><br />

        You will spend Gestalt in each of the three phases to advance your stats. How to spend Gestalt is entirely a matter of preference. <br />
        If you are unsure of where to start, try allocating it 1/3 to each of S.P.E.W Attributes, Abilities and Skills.<br />
        Generally speaking, Attributes affect a wide variety of skills by a little bit. Abilities allow you to advance certain Skills more easily and<br />
        may provide additional bonuses. Skills are the core of your competency; the chance of your success expressed as a percentage.<br /><br />

        Note, your GM may assign certain values to your character, like Gestalt, that differ from what is presented here. <br />
        In that case, type in the numbers you need to start with...this is only a template, based on one way to create a character. <br /> <br />

        Striking the right balance between restrictive guidance and creative freedom is rather difficult.<br /> 
        Just because you CAN do something in this tool does not mean that you SHOULD do it.<br />
        If you are using this tool reasonably, it should respond in kind. If you wish to break it, it will let you.<br /><br />

        Best of luck in your campaign and may the dice roll ever in your favor.<br /><br />

        P.S. - To learn more about most things, just click its name. Try it out by clicking on More Information below.<br /><br />
        <div @onclick="@ToggleWelcomeModal">More Information</div>
        
    </p>
    <button class="btn btn-primary" @onclick="HandleNewCharacterClick">Create New Character</button>

    <BSModal @ref="WelcomeModal" IsCentered="true">
        <BSModalHeader OnClick="@ToggleWelcomeModal">More Information</BSModalHeader>
        <BSModalBody>
            <p>
                Clicking on the text of interest to you will pull up a modal window with more information, where available.<br /><br />
                All Attributes, Abilities, and Skills have more information behind them.
            </p>
        </BSModalBody>
        <BSModalFooter>
            <BSButton Color="Color.Primary" OnClick="@ToggleWelcomeModal">Ok</BSButton>
        </BSModalFooter>
    </BSModal>
}
else
{
    <EditForm Model="ThisCharacter" OnValidSubmit="HandleOnValidPlayerCharacterSubmit" style="margin-bottom: 15px">
        <BSFormGroup>
            <h2 style="margin-bottom: 5px">Basic Information</h2>
            <BSRow Class="col-md-8" style="margin-bottom: 5px">
                <BSCol>
                    <BSLabel For="characterFirstName">First Name</BSLabel>
                    <BSBasicInput class="form-control" Id="characterFirstName" InputType="InputType.Text" PlaceHolder="First Name" @bind-Value="ThisCharacter.FirstName" />
                </BSCol>
                <BSCol>
                    <BSLabel For="characterLastName">Last Name</BSLabel>
                    <BSBasicInput Id="characterLastName" InputType="InputType.Text" PlaceHolder="Last Name" @bind-Value="ThisCharacter.LastName" />
                </BSCol>
            </BSRow>
            <BSRow Class="col-md-8" style="margin-bottom: 15px">
                <BSCol>
                    <BSLabel For="characterSex">Sex</BSLabel>
                    <BSBasicInput Id="characterSex" InputType="InputType.Text" PlaceHolder="Sex" @bind-Value="ThisCharacter.Sex" />
                </BSCol>
                <BSCol>
                    <BSLabel For="characterAge">Age</BSLabel>
                    <BSBasicInput Id="characterAge" InputType="InputType.Number" PlaceHolder="@ThisCharacter.Age" @bind-Value="ThisCharacter.Age" @onblur="SetGestalt" />
                </BSCol>
            </BSRow>
            <h2 style="margin-bottom: 5px">S.P.E.W. Attributes</h2>
            <BSRow Class="col-md-8" style="margin-bottom: 15px">
                <BSCol>
                    <BSLabel For="characterStrength" @onclick="@onStrengthToggle">Strength</BSLabel>
                    <BSBasicInput Id="characterStrength"
                                  PlaceHolder="@StrengthService.Value"
                                  InputType="InputType.Number"
                                  @bind-Value="@StrengthService.Value"
                                  @onfocus="@(() => InitialValue = StrengthService.Value)"
                                  @onclick="@(() => HandleIncrementPlayerAttribute(StrengthService))" />
                </BSCol>
                <BSCol>
                    <BSLabel For="characterPerception" @onclick="@onPerceptionToggle">Perception</BSLabel>
                    <BSBasicInput Id="characterPerception"
                                  PlaceHolder="@PerceptionService.Value"
                                  InputType="InputType.Number"
                                  @bind-Value="PerceptionService.Value"
                                  @onfocus="(() => InitialValue = PerceptionService.Value)"
                                  @onclick="(() => HandleIncrementPlayerAttribute(PerceptionService))" />
                </BSCol>
                <BSCol>
                    <BSLabel For="characterEmpathy" @onclick="@onEmpathyToggle">Empathy</BSLabel>
                    <BSBasicInput Id="characterEmpathy"
                                  PlaceHolder="@EmpathyService.Value"
                                  InputType="InputType.Number"
                                  @bind-Value="EmpathyService.Value"
                                  @onfocus="(() => InitialValue = EmpathyService.Value)"
                                  @onclick="(() => HandleIncrementPlayerAttribute(EmpathyService))" />
                </BSCol>
                <BSCol>
                    <BSLabel For="characterWillpower" @onclick="@onWillpowerToggle">Willpower</BSLabel>
                    <BSBasicInput Id="characterWillpower"
                                  PlaceHolder="@WillpowerService.Value"
                                  InputType="InputType.Number"
                                  @bind-Value="WillpowerService.Value"
                                  @onfocus="(() => InitialValue = WillpowerService.Value)"
                                  @onclick="(() => HandleIncrementPlayerAttribute(WillpowerService))" />
                </BSCol>
            </BSRow>
            <h3 style="margin-bottom: 5px">Character Resources</h3>
            <BSRow Class="col-md-8" style="margin-bottom: 15px">
                <BSCol>
                    <BSLabel For="survivalPoints">Survival Points</BSLabel>
                    <BSBasicInput Id="survivalPoints" InputType="InputType.Number" PlaceHolder="@ThisCharacter.SurvivalPoints" @bind-Value="ThisCharacter.SurvivalPoints" />
                </BSCol>
                <BSCol>
                    <BSLabel For="gestaltLevel">Gestalt Level</BSLabel>
                    <BSBasicInput Id="gestaltLevel" InputType="InputType.Number" PlaceHolder="@ThisCharacter.GestaltLevel" @bind-Value="ThisCharacter.GestaltLevel"></BSBasicInput>
                </BSCol>
                <BSCol>
                    <BSLabel For="competencePoints">Competence Points</BSLabel>
                    <BSBasicInput Id="competencePoints" InputType="InputType.Number" PlaceHolder="@ThisCharacter.CompetencePoints" @bind-Value="ThisCharacter.CompetencePoints"></BSBasicInput>
                </BSCol>
            </BSRow>
        </BSFormGroup>
        @if (_addAbilities == false)
        {
            <BSButton Color="Color.Primary" ButtonType="ButtonType.Submit" @onclick="onConfirmationToggle" Class="align-right">Continue</BSButton>
        }

    </EditForm>

    @if (_addAbilities == false)
    {
        
    }
    else
    {
        <h2>Abilities</h2>

        <BSForm Model="Helper" OnValidSubmit="HandleOnValidBaseAbilitySubmit">
            <BSFormGroup>
                <BSRow Class="col-md-8">
                    <BSCol>
                        <BSLabel For="baseAbility">Ability</BSLabel>
                        <BSBasicInput Id="baseAbility" InputType="InputType.Select" @bind-Value="Helper.FormString">
                            <option value="">Select Ability</option>
                            @foreach (var ability in BaseAbilities)
                                    {
                                <option value="@ability.Id">@ability.Name</option>
                                    }
                        </BSBasicInput>
                    </BSCol>
                    <BSCol Class="col-md-1">
                        <BSLabel For="formSubmit">Add</BSLabel>
                        <BSButton Id="formSubmit"
                                  Color="Color.Primary"
                                  ButtonType="ButtonType.Submit">Add</BSButton>
                    </BSCol>
                    <BSCol Class="col-md-1">
                        <BSLabel For="baseAbilityDetails">Details</BSLabel>
                        <BSButton Id="baseAbilityDetails"
                                  ButtonType="ButtonType.Button"
                                  OnClick="(() => onBaseAbilityToggleOn(BaseAbilities.FirstOrDefault(a => a.Id == Int32.Parse(Helper.FormString))))">Description</BSButton>
                    </BSCol>
                </BSRow>
            </BSFormGroup>
        </BSForm>

        <BSForm Model="ThisPlayerAbility" OnValidSubmit="HandleOnValidPlayerAbilitySubmit">
            <BSTable class="col-md-8">
                <thead>
                <tr>
                    <th scope="col" style="width: 35%">Ability</th>
                    <th style="width: 15%">Tier</th>
                    <th style="width: 40%">Notes</th>
                    <th style="width: 5%"></th>
                    <th style="width: 5%"></th>
                </tr>
                </thead>
                @foreach (var ability in ThisCharacter.PlayerAbilities)
                {
                    <tbody>
                    <tr>
                        <th scope="row" @onclick="@(() => onBaseAbilityToggleOn(ability.BaseAbility))">@ability.BaseAbility.Name</th>
                        <td>
                            <InputNumber id="baseAbility"
                                         class="form-control"
                                         placeholder="@ability.Tier"
                                         @bind-Value="ability.Tier"
                                         @onfocus="(() => InitialValue = ability.Tier)"
                                         @onchange="(() => InitialValue = ability.Tier)"
                                         @onclick="(() => HandleIncrementPlayerAbility(ability))" />
                        </td>
                        <td><InputText class="form-control" @bind-Value="@ability.Notes" placeholder="@ability.Notes" /></td>
                        <td>
                            <BSButton ButtonType="ButtonType.Button"
                                      @onclick="(() => DeletePlayerAbility(ability))"
                                      Class="btn-danger">X</BSButton>
                        </td>
                    </tr>
                    </tbody>
                }
            </BSTable>
        </BSForm>

        if (_addSkills == false)
        {
            <button class="btn btn-primary" @onclick="@HandleToggleSkills">Continue</button>
        }
        else
        {
            <h2>Skills</h2>
            <div class="card-columns col-md-8">
                @foreach (var skill in ThisCharacter.PlayerSkills)
                {
                    <div class="card">
                        <BSForm Model="skill">
                            <div class="card-title text-center">@skill.BaseSkill.Name : @skill.Advancements</div>
                            <BSInput InputType="InputType.Number"
                                     @bind-Value="skill.Value"
                                     @onfocus="(() => InitialValue = skill.Value)"
                                     @onchange="(() => InitialValue = skill.Value)"
                                     @onclick="(() => HandleIncrementPlayerSkill(skill))"
                                     class="text-center" />
                        </BSForm>
                    </div>
                }
            </div>
        }
    }




    <BSModal @ref="Step1Confirmation" IsCentered="true">
        <BSModalHeader OnClick="@onConfirmationToggle">Phase 1 Complete</BSModalHeader>
        <BSModalBody>
            <p>Your changes have been saved.<br /><br />Next, add your Abilities. You can always add Abilities later, but selecting your Abilities now will give you greater bonuses to your Skills.</p>
        </BSModalBody>
        <BSModalFooter>
            <BSButton Color="Color.Primary" OnClick="@onConfirmationToggle">Ok</BSButton>
        </BSModalFooter>
    </BSModal>
    <BSModal @ref="StrengthDescription" IsCentered="true">
        <BSModalHeader OnClick="@onStrengthToggle">Strength</BSModalHeader>
        <BSModalBody>
            <p>@((MarkupString) StrengthService.BaseAttribute.HtmlDescription)</p>
        </BSModalBody>
        <BSModalFooter>
            <BSButton Color="Color.Primary" OnClick="@onStrengthToggle">Ok</BSButton>
        </BSModalFooter>
    </BSModal>
    <BSModal @ref="PerceptionDescription" IsCentered="true">
        <BSModalHeader OnClick="@onPerceptionToggle">Perception</BSModalHeader>
        <BSModalBody>
            <p>@((MarkupString) PerceptionService.BaseAttribute.HtmlDescription)</p>
        </BSModalBody>
        <BSModalFooter>
            <BSButton Color="Color.Primary" OnClick="@onPerceptionToggle">Ok</BSButton>
        </BSModalFooter>
    </BSModal>
    <BSModal @ref="EmpathyDescription" IsCentered="true">
        <BSModalHeader OnClick="@onEmpathyToggle">Empathy</BSModalHeader>
        <BSModalBody>
            <p>@((MarkupString) EmpathyService.BaseAttribute.HtmlDescription)</p>
        </BSModalBody>
        <BSModalFooter>
            <BSButton Color="Color.Primary" OnClick="@onEmpathyToggle">Ok</BSButton>
        </BSModalFooter>
    </BSModal>
    <BSModal @ref="WillpowerDescription" IsCentered="true">
        <BSModalHeader OnClick="@onWillpowerToggle">Willpower</BSModalHeader>
        <BSModalBody>
            <p>@((MarkupString) WillpowerService.BaseAttribute.HtmlDescription)</p>
        </BSModalBody>
        <BSModalFooter>
            <BSButton Color="Color.Primary" OnClick="@onWillpowerToggle">Ok</BSButton>
        </BSModalFooter>
    </BSModal>
    <BSModal @ref="BaseAbilityDescription" IsCentered="true">
        <BSModalHeader OnClick="@onBaseAbilityToggleOff">@ThisBaseAbility.Name</BSModalHeader>
        <BSModalBody>
            <p>@((MarkupString) ThisBaseAbility.HtmlDescription)</p>
        </BSModalBody>
        <BSModalFooter>
            <BSButton Color="Color.Primary" OnClick="@onBaseAbilityToggleOff">Ok</BSButton>
        </BSModalFooter>
    </BSModal>

}