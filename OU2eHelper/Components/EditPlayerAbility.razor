@using OU2eHelper.Services
@inject IPlayerAbilityService PlayerAbilityService
@inject IBaseAbilityService BaseAbilityService

@if (PlayerAbility != null)
{
    <h3>@BaseAbility.Name</h3>
    <BSForm Model="PlayerAbility" OnValidSubmit="SavePlayerAbility">
        <BSFormGroup>
            <BSRow>
                <BSCol>

                </BSCol>
            </BSRow>
        </BSFormGroup>
    </BSForm>




}



@code {

    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    [Parameter] public int EditPlayerAbilityId { get; set; }

    PlayerAbility PlayerAbility { get; set; }
    private BaseAbility BaseAbility { get; set; }

    protected override async Task OnInitializedAsync()
    {
        PlayerAbility = await PlayerAbilityService.GetPlayerAbility(EditPlayerAbilityId);
        BaseAbility = await BaseAbilityService.GetBaseAbility(PlayerAbility.BaseAbilityId);
    }

    async Task SavePlayerAbility()
    {
        await PlayerAbilityService.UpdatePlayerAbility(EditPlayerAbilityId, PlayerAbility);
        await ModalInstance.CloseAsync(ModalResult.Ok(PlayerAbility));
    }
}
